// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.4.32"
    ext.arouter_register_version = '1.0.2'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        //使用 Hilt 实现依赖项注入
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.35.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        /*    可选使用，通过 ARouter 提供的注册插件进行路由表的自动加载(power by [AutoRegister](https://github.com/luckybilly/AutoRegister))， 默认通过扫描 dex 的方式
    进行加载通过 gradle 插件进行自动注册可以缩短初始化时间解决应用加固导致无法直接访问
    dex 文件，初始化失败的问题，需要注意的是，该插件必须搭配 api 1.3.0 以上版本使用！*/
        classpath "com.alibaba:arouter-register:$arouter_register_version"
    }
}

/**
 * 如果在多项目构建中，可能想把插件应用到子项目中，apply false 来告诉 Gradle 不要应用插件
 *
 * plugins {} 默认的行为是解析和应用插件
 */
plugins {
    // 这个 id 就是在 versionPlugin 文件夹下 build.gradle 文件内定义的id
    id "com.zwl.cit.plugin" apply false
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects { subproject ->
    // 默认应用所有子项目中
    apply plugin: 'com.zwl.cit.plugin'

    // 如果想应用到某个子项目中，可以通过 subproject.name 来判断应用在哪个子项目中
    // subproject.name 是你子项目的名字，示例如下
    // 官方文档地址：https://guides.gradle.org/creating-multi-project-builds/#add_documentation
//    if (subproject.name == "app") {
//        apply plugin: 'com.android.application'
//    }else {
//        apply plugin: 'com.android.library'
//    }
//    apply plugin: 'kotlin-android'
//    apply plugin: 'kotlin-kapt'
//    apply plugin: 'dagger.hilt.android.plugin'
}
task clean(type: Delete) {
    delete rootProject.buildDir
}
